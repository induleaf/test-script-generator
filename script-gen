
window.leafconnect_analytics = analytics;
window.leafconnect_browser = browser;
  
if (typeof leafconnect_analytics == 'undefined') {
  leafconnect_analytics = {};
}
if (typeof leafconnect_browser == 'undefined') {
  leafconnect_browser = {};
}
if (typeof leafconnect_init == 'undefined') {
  leafconnect_init = {};
}
if (typeof leafconnect_api == 'undefined') {
  leafconnect_api = {};
}

var domainVendorConfig = {
  "adfg.adsf": {
    "FB": true,
    "GA4": true,
    "GA4ID": "",
    "GADS": true,
    "GADSID": "",
    "GADSPV": "",
    "GADSVI": "",
    "GADSATC": "",
    "GADSIC": "",
    "GADSP": "",
    "PT": true,
    "PTID": "",
    "TT": true,
    "TTID": "",
    "CMV2": true,
    "GTM": true,
    "GTMID": ""
  }
};

// Array to store multiple deferred functions
var deferredEvents = [];

// Save a function call with its parameters
function deferEvent(eventFunction) {
  console.log('saving function type ', typeof eventFunction);
  deferredEvents.push(eventFunction);
}

// Function to fire all deferred events
function fireDeferredEvents() {
  deferredEvents.forEach(function(eventFunction) { console.log('eventFunction ', eventFunction); eventFunction() });
  deferredEvents = []; // Clear the list after execution
}

const initContextData = leafconnect_init.context?.document;
var activeDomain = initContextData.location.host;
var customerPrivacy = { ...leafconnect_init.customerPrivacy };
var trackMarketing = leafconnect_init.customerPrivacy.marketingAllowed;
var trackAnalytics = leafconnect_init.customerPrivacy.analyticsProcessingAllowed; 

// Use the customerPrivacy Standard API to subscribe to consent collected events and update the status
leafconnect_api.customerPrivacy.subscribe('visitorConsentCollected', (event) => {
  var customerPrivacyStatus = event.customerPrivacy;
  console.log('customerPrivacyStatus ... ', customerPrivacyStatus);
  customerPrivacy = { ...customerPrivacyStatus };
  fireDeferredEvents();
})

var trackMarketing = initData.customerPrivacy.marketingAllowed;
var trackAnalytics = initData.customerPrivacy.analyticsProcessingAllowed; 

let gtag;
if(domainVendorConfig[activeDomain].GA4){ 
  //**********************//
  // INIT GA4 GTAG
  //**********************//
  var scriptSrc = "https://www.googletagmanager.com/gtag/js?id=" + domainVendorConfig[activeDomain].GA4ID;
  const scriptElem = document.createElement('script');
  scriptElem.setAttribute('src', scriptSrc);
  scriptElem.setAttribute('async', '');
  document.head.appendChild(scriptElem);

  window.dataLayer = window.dataLayer || [];
  gtag = function(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', domainVendorConfig[activeDomain].GA4ID, { 
    send_page_view: false, 
    page_location: initContextData?.location?.href, 
    page_referrer: initContextData?.referrer, 
    page_title: initContextData?.title 
  });
  //**********************//
  // END GA4 GTAG
  //**********************//
}
   
if(domainVendorConfig[activeDomain].CMV2){ 
  //Google Consent Mode v2
  gtag('consent', 'default', {
    'ad_storage': 'denied',
    'analytics_storage': 'denied',
    'ad_user_data': 'denied',
    'ad_personalization': 'denied',
  });

  gtag('consent', 'update', {
    'ad_storage': trackMarketing ? 'granted' : 'denied',
    'analytics_storage': trackAnalytics ? 'granted' : 'denied',
    'ad_user_data': trackMarketing ? 'granted' : 'denied',
    'ad_personalization': trackMarketing ? 'granted' : 'denied',
  });
}

if(domainVendorConfig[activeDomain].GADS){
  //**********************//
  // INIT GOOGLE ADS TAG 
  //**********************//
  var adsScriptSrc = "https://www.googletagmanager.com/gtag/js?id=" + domainVendorConfig[activeDomain].GADSID;
  const adsScriptElem = document.createElement('script');
  adsScriptElem.setAttribute('src', adsScriptSrc);
  adsScriptElem.setAttribute('async', '');
  document.head.appendChild(adsScriptElem);

  window.dataLayer = window.dataLayer || [];
  gtag = function(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', domainVendorConfig[activeDomain].GADSID,  {
    page_location: initContextData?.location?.href,
    page_referrer: initContextData?.referrer,
    page_title: initContextData?.title
  });

  //**********************//
  // END GOOGLE ADS TAG 
  //**********************//
}

if(domainVendorConfig[activeDomain].GTM){
  //**********************//
  // INIT GTM CONTAINER
  //**********************//
  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
  })(window,document,'script','dataLayer',domainVendorConfig[activeDomain].GTMID);
  //**********************//
  // END GTM CONTAINER
  //**********************//
}

if(domainVendorConfig[activeDomain].FB && trackMarketing){
  //**********************//
  // INIT META
  //**********************//
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  //**********************//
  // END META
  //**********************//
}

if(domainVendorConfig[activeDomain].TT && trackMarketing){
  //**********************//
  // INIT TIKTOK
  //**********************//
    !function (w, d, t) {
      w.TiktokAnalyticsObject=t;var ttq=w[t]=w[t]||[];ttq.methods=["page","track","identify","instances","debug","on","off","once","ready","alias","group","enableCookie","disableCookie"],ttq.setAndDefer=function(t,e){t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}};for(var i=0;i<ttq.methods.length;i++)ttq.setAndDefer(ttq,ttq.methods[i]);ttq.instance=function(t){for(var e=ttq._i[t]||[],n=0;n<ttq.methods.length;n++)ttq.setAndDefer(e,ttq.methods[n]);return e},ttq.load=function(e,n){var i="https://analytics.tiktok.com/i18n/pixel/events.js";ttq._i=ttq._i||{},ttq._i[e]=[],ttq._i[e]._u=i,ttq._t=ttq._t||{},ttq._t[e]=+new Date,ttq._o=ttq._o||{},ttq._o[e]=n||{};var o=document.createElement("script");o.type="text/javascript",o.async=!0,o.src=i+"?sdkid="+e+"&lib="+t;var a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(o,a)};

      ttq.load(domainVendorConfig[activeDomain].TTID);
      ttq.page();
    }(window, document, 'ttq');
  //**********************//
  // END TIKTOK
  //**********************//
}

if(domainVendorConfig[activeDomain].PT && trackMarketing){
  //**********************//
  // INIT PINTEREST
  //**********************//  
  !function(e){if(!window.pintrk){window.pintrk=function(){window.pintrk.queue.push(
      Array.prototype.slice.call(arguments))};var
      n=window.pintrk;n.queue=[],n.version="3.0";var
      t=document.createElement("script");t.async=!0,t.src=e;var
      r=document.getElementsByTagName("script")[0];r.parentNode.insertBefore(t,r)}}("https://s.pinimg.com/ct/core.js");
    pintrk('load', domainVendorConfig[activeDomain].PTID);
    pintrk('page');
  //**********************//
  // END PINTEREST
  //**********************//
}

function generateCustomerData(externalId, customer) {
  var customerData = {
    'external_id': externalId
  };
  if (Object.keys(customer).length > 0) {
    customerData.em = customer.email;
    customerData.fn = customer.first_name;
    customerData.ln = customer.last_name;
    customerData.ct = customer.default_address.city;
    customerData.zp = customer.default_address.zip;
    customerData.country = customer.default_address.country_code;
  }
  return customerData;
}  

let sendFbBrowserEvent;
if(domainVendorConfig[activeDomain].FB){
  // Sends FB browser side event
  sendFbBrowserEvent = function(eventName, eventData, eventID, externalId, customer) {
    var customerData = generateCustomerData(externalId, customer);
    if (domainVendorConfig[activeDomain].FBID && trackMarketing) {
      fbq('init', domainVendorConfig[activeDomain].FBID , customerData);
      fbq('trackSingle', domainVendorConfig[activeDomain].FBID, eventName, eventData, {eventID: eventID});
    }
  }
}

let sendGA4BrowserEvent;
if(domainVendorConfig[activeDomain].GA4){  
  // Sends GA4 browser side event
  sendGA4BrowserEvent = function(eventName, eventData) {
    gtag("event", eventName, eventData);
  }
}
  
let sendTikTokBrowserEvent;
if(domainVendorConfig[activeDomain].TT){
  sendTikTokBrowserEvent = function(eventName, eventData){
    if(trackMarketing){
      ttq.track(eventName, eventData);
    }
  }
}

let sendPTBrowserEvent;
if(domainVendorConfig[activeDomain].PT){
  sendPTBrowserEvent = function(eventName, eventData){
    if(trackMarketing){
       pintrk('track', eventName, eventData);
    }
  }
}

// This function generates a random string
const rand = () => {
  // Math.random() returns a random floating point number between 0 and 1
  // toString(36) base-36 is a notation for representing numbers using the 26 letters of the alphabet along with ten digits
  // substring(2) returns a new string containing all characters starting at index 2 to the end of the original string
  return Math.random().toString(36).substring(2);
};

const generateRandomToken = () => {
  // Invoking the rand() function twice and concatenating the output strings
  // thus producing a longer and more complex random token
  return rand() + rand();
};

function setCookie(cvalue, cname) {
  const d = new Date();
  d.setTime(d.getTime() + (365*24*60*60*1000));
  var expires = "expires="+ d.toUTCString();
  leafconnect_browser.cookie.set(cname+'='+cvalue+'; '+expires+'; ' + "path=/");
}

async function handleConnectCid() {
  var connectCidCookie = await leafconnect_browser.cookie.get('connect_cid');
  if (!connectCidCookie || connectCidCookie === '') {
    var connectCid = generateRandomToken();
    setCookie(connectCid, 'connect_cid');
  }
}

async function getCookie(cookieName) {
  var cookieValue = await leafconnect_browser.cookie.get(cookieName);
  return cookieValue;
}

function getCurrentTime() {
  return Math.floor(Date.now() / 1000);
}

async function getLatestETMSec() {
  var latestETMSecCookie = await getCookie('latestETMSec');
  var currentTime = getCurrentTime();
  if (!latestETMSecCookie || latestETMSecCookie === '') {
    setCookie(currentTime, 'latestETMSec');
    return 1;
  }
  var etmSec = currentTime - latestETMSecCookie;
  if (etmSec === 0) return 1;
  return etmSec;
}

async function getUserData(event) {
  var externalId = await getCookie('connect_cid');
  var gaCookie = await getCookie('_ga');
  var gaCookieFormatted = gaCookie.split('.').splice(2, 3).join('.');

  // Gets google session id.
  var gaSessionId = '';

  if(domainVendorConfig[activeDomain].GA4){
    var ga4MeasurementId = domainVendorConfig[activeDomain].GA4ID;
    var formattedGA4Id = ga4MeasurementId.split('-')[1];
    var sessionCookieName = '_ga_' + formattedGA4Id;
    var gaSessionCookie = await getCookie(sessionCookieName);
    if (gaSessionCookie && gaSessionCookie.split('.').length > 3) {
      gaSessionId = gaSessionCookie.split('.')[2];
    }
  }

  var fbpCookie = await getCookie('_fbp');
  var fbp = null;

  if (fbpCookie && fbpCookie !== '') {
    fbp = fbpCookie;
  }

  var fbcCookie = await getCookie('_fbc');
  var fbc = null;

  if (fbcCookie && fbcCookie !== '') {
    fbc = fbcCookie;
  }

  var engagementTimeMsec = await getLatestETMSec();
  var pageReferrer = event.context.document.referrer || event.context.document.location.origin;
  
  var userData = {
    'cid': gaCookieFormatted,
    'ga_session_id': gaSessionId,
    'external_id': externalId,
    'fbp': fbp,
    'fbc': fbc,
    'page_referrer': pageReferrer,
    'engagement_time_msec': engagementTimeMsec,
    'user_agent': event.context.navigator.userAgent,
  };

  return userData;
}
    
//**********************//
// START PAGE VIEW EVENT
//**********************//
leafconnect_analytics.subscribe("page_viewed", async (event) => {
  var eventUrl = event.context.window.location.href;
  if (!eventUrl.includes('processing')) {

    await handleConnectCid();
    var userData = await getUserData(event);

    var eventData = {};
    var customer = {};

    if(domainVendorConfig[activeDomain].FB){
      sendFbBrowserEvent('PageView', eventData, event.id, userData.external_id, customer);
      deferEvent(() => sendFbBrowserEvent('PageView', eventData, event.id, userData.external_id, customer));

    }

    if(domainVendorConfig[activeDomain].GA4){
      var ga4BrowserEventData = {
        page_location: event.context.window.location.href,
        page_title: event.context.document.title,
      }
      sendGA4BrowserEvent('page_view', ga4BrowserEventData);
    }


    if(domainVendorConfig[activeDomain].GADS && domainVendorConfig[activeDomain].GADSPV != undefined && trackMarketing){
      gtag('set', 'user_data', userData);

      gtag('event', 'conversion', {
        'send_to': domainVendorConfig[activeDomain].GADSID + '/' + domainVendorConfig[activeDomain].GADSPV
      });    
    }

    var currentTime = getCurrentTime();
    setCookie(currentTime, 'latestETMSec');

    window.dataLayer.push({
      event: "page_view",
      event_id: event.id,
      external_id: userData.external_id,
      url: event.context.document.location.href,
      page_title: event.context.document.title,
    });
  }
});
//**********************//
// END PAGE VIEW EVENT
//**********************//
      
function titleCase(str) {
  str = str.toLowerCase().split(' ');
  for (var i = 0; i < str.length; i++) {
    str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);
  }
  return str.join(' ');
}

function getRefURLObj(urlArr) {
  var refUrlObj = {};
  if (urlArr.length > 1 && urlArr.includes('collections')) {
    if (urlArr[0] !== 'collections') {
      var newUrlArr = urlArr.slice(1);
      refUrlObj.item_list_id = newUrlArr.join("_");
      refUrlObj.item_list_name = titleCase(newUrlArr.join(" "));
    } else {
      refUrlObj.item_list_id = urlArr.join("_");
      refUrlObj.item_list_name = titleCase(urlArr.join(" "));
    }
  } else {
    refUrlObj.item_list_id = urlArr.join("_");
    refUrlObj.item_list_name = titleCase(urlArr.join(" "));
  }
  return refUrlObj;
}

function cleanRefURL(refUrl, domain){
  var path = refUrl.replace(domain,'');
  var finalUrl = "";
  var length;

  if(path.includes('?')){
    var pos = path.indexOf('?');
    finalUrl = path.slice(0,pos);
  } else {
    finalUrl = path;
  }

  length = finalUrl.length;

  if(finalUrl.length > 1 && finalUrl.charAt(length-1) == '/'){
    finalUrl = finalUrl.slice(1,-1);
    var urlArr = finalUrl.split('/');
    return getRefURLObj(urlArr);
  } else if(finalUrl.length <= 1) {
    return {item_list_id: 'home', item_list_name: 'Home'};
  } else {
    finalUrl = finalUrl.slice(1);
    var urlArray = finalUrl.split('/');
    return getRefURLObj(urlArray);
  }
}

//**********************//
// START PRODUCT VIEW EVENT
//**********************//
leafconnect_analytics.subscribe("product_viewed", async (event) => {
  var userData = await getUserData(event);
  var variantTitle = event.data.productVariant.title;
  if (variantTitle === '') {
    variantTitle = 'Default Title';
  }
  var documentReferrer = event.context.document.referrer;
  var locationOrigin = event.context.document.location.origin;
  var protocol = event.context.document.location.protocol;
  var productUrl = event.context.document.location.href;
  var refUrl = cleanRefURL(documentReferrer, locationOrigin);
  var itemListId = refUrl.item_list_id;
  var itemListName = refUrl.item_list_name;
  var imageUrl = protocol + event.data.productVariant.image.src;
  var currency = event.data.productVariant.price.currencyCode;
  var value = event.data.productVariant.price.amount;
  var productSku = event.data.productVariant.sku;
  if (productSku === "") {
    productSku = event.data.productVariant.product.id;
  }
  var ecommerce = {
    currency: currency,
    value: value,
    affiliation: "Online Store",
    items: [{
      item_id: productSku,
      item_shopify_id: event.data.productVariant.product.id,
      item_shopify_variant: event.data.productVariant.id,
      item_name: event.data.productVariant.product.title,
      item_variant: variantTitle,
      currency: currency,
      price: value,
      item_brand: event.data.productVariant.product.vendor,
      item_list_id: itemListId,
      item_list_name: itemListName,
      image_url: imageUrl,
      product_url: productUrl
    }]
  };
  window.dataLayer.push({
    pageType: "Product",
    event: "view_item",
    event_id: event.id,
    external_id: userData.external_id,
    url: event.context.document.location.href,
    ecommerce: ecommerce,
  });

  var contents = [];
  var variantId = event.data.productVariant.id || event.data.productVariant.sku;
  var productContent = { id: variantId, quantity: 1 };
  var content_ids = [variantId];
  contents.push(productContent);
  var productData = {
    content_type: 'product',
    currency: currency,
    value: value,
    contents: contents,
  };

  productData.content_ids = content_ids;
  var customer = {};
      
  if(domainVendorConfig[activeDomain].FB){
    sendFbBrowserEvent('ViewContent', productData, event.id, userData.external_id, customer);
    deferEvent(() => sendFbBrowserEvent('ViewContent', productData, event.id, userData.external_id, customer));
  }

  if(domainVendorConfig[activeDomain].GA4){
    var ga4BrowserData = {
      // page_location: event.context.window.location.href,
      // page_title: event.context.document.title,
      ...ecommerce,
    };
    sendGA4BrowserEvent('view_item', ga4BrowserData);
  }
  
  if(domainVendorConfig[activeDomain].GADS && domainVendorConfig[activeDomain].GADSVI != undefined && trackMarketing){
    gtag('set', 'user_data', userData);
    var adsItems = [];

    var adsProdId = 'shopify_GB_' + event.data.productVariant.product.id + '_' + event.data.productVariant.id;
    adsItems.push({ 'id': adsProdId, 'price': value, 'quantity': 1 });

    gtag('event', 'conversion', {
      'send_to': domainVendorConfig[activeDomain].GADS + '/' + domainVendorConfig[activeDomain].GADSVI, 
      'value': value,
      'currency': currency,
      'items': adsItems,
    });

  }

  if(domainVendorConfig[activeDomain].TT){
    var tikTokContents = [];
    var tikTokProductContent = { 
      content_id: variantId,
      content_name: event.data.productVariant.product.title,
      quantity: 1,
      price: value 
      };
    tikTokContents.push(tikTokProductContent);
    var tikTokProductData = {
      contents: tikTokContents,
      content_type: 'product',
      currency: currency,
      value: value,  
    };
    
    sendTikTokBrowserEvent('ViewContent', tikTokProductData);
    deferEvent(() => sendTikTokBrowserEvent('ViewContent', tikTokProductData));
  }
    
  if(domainVendorConfig[activeDomain].PT){
    var lineItems = [];
    var ptProductContent = {
      product_name: event.data.productVariant.product.title,
      product_id: event.data.productVariant.product.id,
      product_variant_id: variantId,
      product_variant: variantTitle,
      product_price: value,
      product_quantity: 1,
      product_brand: event.data.productVariant.product.vendor,
    };  
    lineItems.push(ptProductContent);
    var ptProductData = {
      event_id: event.id,
      currency: currency,
      line_items: lineItems
    }
    
    sendPTBrowserEvent('pagevisit', ptProductData)
    deferEvent(() => sendPTBrowserEvent('pagevisit', ptProductData));
  }

  var currentTime = getCurrentTime();
  setCookie(currentTime, 'latestETMSec');
});
//**********************//
// END PRODUCT VIEW EVENT
//**********************//
    
//**********************//
// START ADD TO CART EVENT
//**********************//
leafconnect_analytics.subscribe("product_added_to_cart", async (event) => {
  if (event.clientId !== '') {
    var userData = await getUserData(event);
    var documentReferrer = event.context.document.referrer;
    var locationOrigin = event.context.document.location.origin;
    var productUrl = locationOrigin + event.data.cartLine.merchandise.product.url;
    var refUrl = cleanRefURL(documentReferrer, locationOrigin);
    var itemListId = refUrl.item_list_id;
    var itemListName = refUrl.item_list_name;
    var currency = event.data.cartLine.merchandise.price.currencyCode;
    var productPrice = event.data.cartLine.merchandise.price.amount;
    var eventValue = event.data.cartLine.cost.totalAmount.amount;
    var productSku = event.data.cartLine.merchandise.sku;
    if (productSku === '') {
      productSku = event.data.cartLine.merchandise.product.id;
    }
    var ecommerce = {
      currency: currency,
      value: eventValue,
      affiliation: "Online Store",
      items: [{
        item_id: productSku,
        item_shopify_id: event.data.cartLine.merchandise.product.id,
        item_shopify_variant: event.data.cartLine.merchandise.id,
        item_name: event.data.cartLine.merchandise.product.title,
        item_variant: 'Default Variant Title',
        currency: currency,
        price: productPrice,
        quantity: event.data.cartLine.quantity,
        item_brand: event.data.cartLine.merchandise.product.vendor,
        item_list_id: itemListId,
        item_list_name: itemListName,
        image_url: event.data.cartLine.merchandise.image.src,
        product_url: productUrl
      }]
    };
    window.dataLayer.push({
      pageType: "Product",
      event: "add_to_cart",
      event_id: event.id,
      external_id: userData.external_id,
      url: event.context.document.location.href,
      ecommerce: ecommerce,
    });

    var contents = [];
    var contentId = event.data.cartLine.merchandise.id || event.data.cartLine.merchandise.sku;
    var productContent = { id: contentId, quantity: event.data.cartLine.quantity };
    var content_ids = [contentId];
    contents.push(productContent);
    var productData = {
      content_type: 'product',
      currency: currency,
      value: eventValue,
      contents: contents,
    };

    productData.content_ids = content_ids;
    var customer = {};

      
    if(domainVendorConfig[activeDomain].FB){
      sendFbBrowserEvent('AddToCart', productData, event.id, userData.external_id, customer);
    }

    if(domainVendorConfig[activeDomain].GA4){
      var ga4BrowserData = {
        // page_location: event.context.window.location.href,
        // page_title: event.context.document.title,
        ...ecommerce,
      };

      sendGA4BrowserEvent('add_to_cart', ga4BrowserData);
    }
  
    if(domainVendorConfig[activeDomain].GADS && domainVendorConfig[activeDomain].GADSATC != undefined && trackMarketing){
  
      gtag('set', 'user_data', userData);
      var adsItems = [];

        var adsProdId = 'shopify_GB_' + event.data.cartLine.merchandise.product.id + '_' + event.data.cartLine.merchandise.id;
        adsItems.push({ 'id': adsProdId, 'price': productPrice, 'quantity': event.data.cartLine.quantity });
        
      gtag('event', 'conversion', {
        'send_to': domainVendorConfig[activeDomain].GADSID + '/' + domainVendorConfig[activeDomain].GADSATC, 
        'value': eventValue,
        'currency': currency,
        'items': adsItems,
      });
    
    }

    if(domainVendorConfig[activeDomain].TT){
      var tikTokContents = [];
      var tikTokProductContent = { 
        content_id: contentId,
        content_name: event.data.cartLine.merchandise.product.title,
        quantity: event.data.cartLine.quantity,
        price: productPrice 
        };
      tikTokContents.push(tikTokProductContent);
      var tikTokProductData = {
        contents: tikTokContents,
        content_type: 'product',
        currency: currency,
        value: eventValue,  
      };  
    
      sendTikTokBrowserEvent('AddToCart', tikTokProductData);
    }

    if(domainVendorConfig[activeDomain].PT){
      var lineItems = [];

      var ptProductContent = {
        product_name: event.data.cartLine.merchandise.product.title,
        product_id: event.data.cartLine.merchandise.id,
        product_variant_id: event.data.cartLine.merchandise.product.id,
        product_variant: event.data.cartLine.merchandise.product.title,
        product_price: productPrice,
        product_quantity: event.data.cartLine.quantity,
        product_brand: event.data.cartLine.merchandise.product.vendor,
      };
      lineItems.push(ptProductContent);
      var ptProductData = {
        event_id: event.id,
        currency: currency,
        line_items: lineItems
      }
      sendPTBrowserEvent('addtocart', ptProductData);
    }

    var currentTime = getCurrentTime();
    setCookie(currentTime, 'latestETMSec');
  }
});
//**********************//
// END ADD TO CART EVENT
//**********************//
    
// Function to prepare the items data for the checkout events: checkout_started and checkout_completed.
function formatCheckoutItems(eventData, eventName) {
  var items = [];
  var item_list_id, item_list_name;

  var documentReferrer = eventData.context.document.referrer;
  var locationOrigin = eventData.context.document.location.origin;
  var refUrl = cleanRefURL(documentReferrer, locationOrigin);
  item_list_id = refUrl.item_list_id;
  item_list_name = refUrl.item_list_name;

  eventData.data.checkout.lineItems.forEach(function (item) {
    var itemData = {
      'item_id': item.variant.sku ? item.variant.sku : item.variant.product.id,
      'item_shopify_id': item.variant.product.id,
      'item_shopify_variant': item.variant.id,
      'item_name': item.title,
      'item_variant': item.variant.title || 'default title',
      'currency': item.variant.price.currencyCode,
      'price': item.variant.price.amount,
      'item_brand': item.variant.product.vendor,
      'item_list_id': item_list_id,
      'item_list_name': item_list_name,
      'image_url': item.variant.image.src,
      'quantity': item.quantity,
    };

    if (eventName === 'custom/update_checkout') {
      itemData.sku = item.variant.sku ? item.variant.sku : item.variant.product.id;
      itemData.product_id = item.variant.product.id;
      itemData.variant_id = item.variant.id;
      itemData.title = item.variant.product.title;
      itemData.variant_title = item.variant.title;
      itemData.vendor = item.variant.product.vendor;
    }

    items.push(itemData);
  });

  return items;
}
    
//***************************//
// START BEGIN CHECKOUT EVENT
//***************************//
leafconnect_analytics.subscribe("checkout_started", async (event) => {
  var userData = await getUserData(event);

  var ga4_data = {};
  ga4_data.value = event.data.checkout.totalPrice.amount;
  ga4_data.currency = event.data.checkout.totalPrice.currencyCode;
  ga4_data.affiliation = "Online Store";

  var items = formatCheckoutItems(event, 'custom/begin_checkout');
  ga4_data.items = items;

  var checkoutData = event.data.checkout;
  var productData = {
    currency: checkoutData.currencyCode,
    content_type: 'product',
    value: parseFloat(checkoutData.totalPrice.amount),
  }
  var contents = [];
  var content_ids = [];
  checkoutData.lineItems.forEach(function (item) {
    var itemId = item.variant.id ? item.variant.id : item.variant.product.id;
    contents.push({ 'id': itemId, 'quantity': item.quantity, 'item_price': item.variant.price.amount });
    content_ids.push(itemId);
  });
  productData.contents = contents;

  window.dataLayer.push({
    pageType: "Initiate Checkout",
    event: "initiate_checkout",
    event_id: event.id,
    external_id: userData.external_id,
    url: event.context.document.location.href,
    ecommerce: {
      value: parseFloat(checkoutData.totalPrice.amount),
      currency: checkoutData.currencyCode,
      affiliation: "Online Store",
      items: items,
    }
  });

  productData.content_ids = content_ids;
  var customer = {};

  if(domainVendorConfig[activeDomain].FB){
    sendFbBrowserEvent('InitiateCheckout', productData, event.id, userData.external_id, customer);
  }

  if(domainVendorConfig[activeDomain].GA4){
    var ga4BrowserData = {
      // page_location: event.context.window.location.href,
      // page_title: event.context.document.title,
      ...ga4_data,
    };
    sendGA4BrowserEvent('begin_checkout', ga4BrowserData);
  }

  if(domainVendorConfig[activeDomain].GADS && domainVendorConfig[activeDomain].GADSIC != undefined && trackMarketing){
    gtag('set', 'user_data', userData);
    var adsItems = [];

    items.forEach(function (item) {
      var adsProdId = 'shopify_GB_' + item.item_shopify_id + '_' + item.item_shopify_variant;
      adsItems.push({ 'id': adsProdId, 'price': item.price, 'quantity': item.quantity });
    });

    gtag('event', 'conversion', {
      'send_to': domainVendorConfig[activeDomain].GADSID + '/' + domainVendorConfig[activeDomain].GADSIC, 
      'value': parseFloat(checkoutData.totalPrice.amount),
      'currency': checkoutData.currencyCode,
      'items': adsItems,
    });
  }

  if(domainVendorConfig[activeDomain].TT){
    var tikTokContents = [];
    items.forEach(function (item) {
      var itemId = item.item_shopify_variant ? item.item_shopify_variant : item.item_shopify_id;
      tikTokContents.push({ 'content_id': itemId, 'content_name': item.item_name, 'price': item.price, 'quantity': item.quantity });
    });
    
    var tikTokProductData = {
      contents: tikTokContents,
      content_type: 'product',
      currency: checkoutData.currencyCode,
      value: parseFloat(checkoutData.totalPrice.amount),  
    };
    
    sendTikTokBrowserEvent('InitiateCheckout', tikTokProductData)
  }
    
  var currentTime = getCurrentTime();
  setCookie(currentTime, 'latestETMSec');
});
//***************************//
// END BEGIN CHECKOUT EVENT
//***************************//
 
//**********************//
// START PURCHASE EVENT
//**********************//
leafconnect_analytics.subscribe("checkout_completed", async (event) => {
  var firstName = event.data.checkout.billingAddress.firstName ? event.data.checkout.billingAddress.firstName.toLowerCase() : null;
  var lastName = event.data.checkout.billingAddress.lastName ? event.data.checkout.billingAddress.lastName.toLowerCase(): null;
  var city = event.data.checkout.billingAddress.city ? event.data.checkout.billingAddress.city.replace(/ /g, "").toLowerCase() : null;
  var state = event.data.checkout.billingAddress.province ? event.data.checkout.billingAddress.province.replace(/ /g, "").toLowerCase() : null;
  var zip = event.data.checkout.billingAddress.zip ? event.data.checkout.billingAddress.zip.replace(/ /g, "").replace("-","").toLowerCase() : null;
  var country = event.data.checkout.billingAddress.country ? event.data.checkout.billingAddress.country.toLowerCase() : null;

  var userData = await getUserData(event);

  var customer = {
    'first_name': firstName,
    'last_name': lastName,
    'default_address': {
      'full_name': firstName + lastName,
      'first_name': firstName,
      'last_name': lastName,
      'address1': event.data.checkout.billingAddress.address1,
      'city': city,
      'province': state,
      'province_code': event.data.checkout.billingAddress.provinceCode,
      'zip': zip,
      'country': country,
      'country_code': event.data.checkout.billingAddress.countryCode,
    }
  };

  if(event.data.checkout.billingAddress.address2){
    customer.default_address.address2 = event.data.checkout.billingAddress.address2;
  }
  if(event.data.checkout.email){
    customer.email = event.data.checkout.email.toLowerCase();
  }

  if (event.data.checkout.billingAddress.phone) {
    var phoneWithCountryDialCode = event.data.checkout.billingAddress.phone.replace('+', '');
    customer.default_address.phone = phoneWithCountryDialCode;
  }

  var product_data = {
    'content_type':'product',
    'currency':event.data.checkout.totalPrice.currencyCode,
    'value':event.data.checkout.totalPrice.amount,
  }

  var contents = [];
  var content_ids = [];

  event.data.checkout.lineItems.forEach(function (item) {
    var itemId = item.variant.id ? item.variant.id : item.variant.product.id;
    contents.push({ 'id': itemId, 'quantity': item.quantity });
    content_ids.push(itemId);
  });

  product_data.contents = contents;

  // Extract the order ID from order
  var orderIdParts = event.data.checkout.order.id.split('/');
  var orderId = orderIdParts[orderIdParts.length - 1];

  var gateway = 'payment_method_not_available';
  if (event.data.checkout.transactions && event.data.checkout.transactions[0] && event.data.checkout.transactions[0].gateway) {
    gateway = event.data.checkout.transactions[0].gateway;
  }

  var items = formatCheckoutItems(event, 'purchase');

  var shipping_price_value = event.data.checkout.shippingLine.price.amount ? event.data.checkout.shippingLine.price.amount : 0
  var ecommerce = {
    transaction_number: orderId,
    transaction_id: orderId,
    affiliation: 'Online Store',
    gateway: gateway,
    currency: event.data.checkout.totalPrice.currencyCode,
    value: event.data.checkout.totalPrice.amount,
    tax: event.data.checkout.totalTax.amount,
    transaction_subtotal: event.data.checkout.subtotalPrice.amount,
    shipping: shipping_price_value,
    items: items,
  };

  window.dataLayer.push({
    pageType: 'Thank You Page',
    event: 'purchase',
    event_id: orderId,
    external_id: userData.external_id,
    url: event.context.document.location.href,
    ecommerce: {
      transaction_number: orderId,
      transaction_id: orderId,
      affiliation: 'Online Store',
      gateway: gateway,
      currency: event.data.checkout.totalPrice.currencyCode,
      value: event.data.checkout.totalPrice.amount,
      tax: event.data.checkout.totalTax.amount,
      transaction_subtotal: event.data.checkout.subtotalPrice.amount,
      shipping: shipping_price_value,
      items: items,
    },
    customer: customer,
  });

  product_data.content_ids = content_ids;
  product_data.content_name = 'Thank You';

  if(domainVendorConfig[activeDomain].FB){
    sendFbBrowserEvent('Purchase', product_data, orderId, userData.external_id, customer);
  }

  if(domainVendorConfig[activeDomain].GA4){
    var ga4BrowserData = {
      // page_location: event.context.window.location.href,
      // page_title: event.context.document.title,
      ...ecommerce,
    };
    sendGA4BrowserEvent('purchase', ga4BrowserData);
  }

  if(domainVendorConfig[activeDomain].GADS && domainVendorConfig[activeDomain].GADSP != undefined && trackMarketing){
    gtag('set', 'user_data', userData);
    var adsItems = [];

    items.forEach(function (item) {
      var adsProdId = 'shopify_GB_' + item.item_shopify_id + '_' + item.item_shopify_variant;
      adsItems.push({ 'id': adsProdId, 'price': item.price, 'quantity': item.quantity });
    });

    gtag('event', 'conversion', {
      'send_to': domainVendorConfig[activeDomain].GADSID + '/' + domainVendorConfig[activeDomain].GADSP, 
      'value': event.data.checkout.totalPrice.amount,
      'currency': event.data.checkout.totalPrice.currencyCode,
      'transaction_id': orderId,
      'items': adsItems,
    });

  }

  if(domainVendorConfig[activeDomain].TT){
    var tikTokContents = [];
    items.forEach(function (item) {
      var itemId = item.item_shopify_variant ? item.item_shopify_variant : item.item_shopify_id;
      tikTokContents.push({ 'content_id': itemId, 'content_name': item.item_name, 'price': item.price, 'quantity': item.quantity });
    });
    var tikTokProductData = {
      contents: tikTokContents,
      content_type: 'product',
      currency: event.data.checkout.totalPrice.currencyCode,
      value: event.data.checkout.totalPrice.amount,  
    };
    ttq.track('CompletePayment', tikTokProductData);
  }
  
  if(domainVendorConfig[activeDomain].PT){
    var pinterestItems = [];

    items.forEach(function (item) {
      pinterestItems.push({ 'product_name': item.item_name, 'product_id': item.item_shopify_id, 'product_variant_id': item.item_shopify_variant, 'product_variant': item.item_name, 'product_price': item.price, 'product_quantity': item.quantity, 'product_brand': item.item_brand });
    });

    pintrk('track', 'checkout', {
      event_id: event.id,
      value: event.data.checkout.totalPrice.amount,
      currency: event.data.checkout.totalPrice.currencyCode,
      line_items: pinterestItems
    });
  }

  var currentTime = getCurrentTime();
  setCookie(currentTime, 'latestETMSec');
});
//**********************//
// END PURCHASE EVENT
//**********************//
